'ษอหออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออหอป
'ฬอผ  OOOOOO       LL             LL           IIIIIIIIII     EEEEEEEEEEE ศอน
'บ   OO    OO      LL             LL               II         EE            บ
'บ  OO      OO     LL             LL               II         EE            บ
'บ  OO      OO     LL             LL               II         EEEEEEEE      บ
'บ  OO      OO     LL             LL               II         EEEEEEEE      บ
'บ  OO      OO     LL             LL               II         EE            บ
'บ   OO    OO      LL             LL               II         EE            บ
'ฬอป  OOOOOO       LLLLLLLLLL     LLLLLLLLLL   IIIIIIIIII     EEEEEEEEEEE ษอน
'ศอสออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออสอผ
'This is my RPG about my brothers pet parrot, Ollie. It's a simple little
'game with no point. I have been learning QBasic for four months and this
'is my first real game. I did most of the code. The sound at the end, when
'you get Game Over isn't mine but I don't know who owns it. I will credit them
'when I find them. I also have a SUB called sleeep() and it was done by some
'genius programmer...can't remember his name though...
'
'
'          Copying is strictly forbidden... unless you want to.



DECLARE SUB roomeight ()
DECLARE SUB sleeep (seconds AS SINGLE)
DECLARE SUB verystart ()
DECLARE SUB fin ()
DECLARE SUB roomone ()
DECLARE SUB roomthree ()
DECLARE SUB roomtwo ()
DECLARE SUB roomfour ()
DECLARE SUB roomfive ()
DECLARE SUB roomsix ()
DECLARE SUB roomseven ()
DECLARE SUB roomnine ()
DECLARE SUB roomten ()
DECLARE SUB roomeleven ()



SCREEN 13
DIM SHARED grass(50), fire(50), soot(50), bridge(50), block(50), gem(50), man(50)
DIM SHARED map1(21, 15)
DIM SHARED parrot(50), parrotsh(50), hardfire(50), map8(21, 15)
DIM SHARED map2(21, 15), nextroom
DIM SHARED map3(21, 15), glove(50), glovesh(50), brick(50), firebottomrightcorner(50), firebottomleftcorner(50), firetoprightcorner(50), firetopleftcorner(50)
DIM SHARED map4(21, 15)
DIM SHARED map5(21, 15)
DIM SHARED map6(21, 15), star(50), starsh(50), map9(21, 15), map10(21, 15), map11(21, 15)
DIM SHARED map7(21, 15), manbacksh(50)
DIM SHARED ball(50), cat(50), catsh(50)
DIM SHARED ballsh(50), blockchip(50), parrotback(50), parrotbacksh(50), parrotfront(50), parrotfrontsh(50)
DIM SHARED manback(50), manfront(50), manhead(50), parrotside(50), parrotsidesh(50)
DIM SHARED health, parroty, parrotx, bally, ballx, quote, pikmin, kid, tim, puppet, hi, bye

health = 120
pikmin = 0
kid = 1
quote = 0

FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), grass


FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), fire


FOR y = 1 TO 13
  FOR x = 1 TO 15
   READ clr
   PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), soot


FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), bridge


FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), block

FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), gem


FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map1(x, y)
 NEXT x
NEXT y



FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), parrot

FOR y = 1 TO 13
 FOR x = 1 TO 15
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotsh


FOR y = 1 TO 13
 FOR x = 15 TO 1 STEP -1
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotside



FOR y = 1 TO 13
 FOR x = 15 TO 1 STEP -1
  READ clr
  PSET (x, y), clr
 NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotsidesh



FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map2(x, y)
 NEXT x
NEXT y



FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map3(x, y)
 NEXT x
NEXT y


FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), man


FOR y = 1 TO 13
  FOR x = 15 TO 1 STEP -1
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), manback


FOR y = 1 TO 13
  FOR x = 15 TO 1 STEP -1
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), manbacksh

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), manfront


FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), manhead


LINE (1, 1)-(15, 13), 0, BF
CIRCLE (7, 7), 7, 2
PAINT (7, 7), 1, 2
GET (1, 1)-(15, 13), ball


LINE (1, 1)-(15, 13), 255, BF
CIRCLE (7, 7), 7, 2
PAINT (7, 7), 1, 2
GET (1, 1)-(15, 13), ballsh

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), blockchip


FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map4(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map5(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map6(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map7(x, y)
 NEXT x
NEXT y


FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotback

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotbacksh

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotfront

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), parrotfrontsh

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), star

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), starsh

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), hardfire

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), cat

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), catsh

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map8(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map9(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map10(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 15
 FOR x = 1 TO 21
  READ map11(x, y)
 NEXT x
NEXT y

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), glove

FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), glovesh


FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), brick


FOR y = 1 TO 13
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), firebottomrightcorner


RESTORE fire
FOR y = 1 TO 13
  FOR x = 15 TO 1 STEP -1
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), firebottomleftcorner


RESTORE fire
FOR y = 13 TO 1 STEP -1
  FOR x = 1 TO 15
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), firetoprightcorner


RESTORE fire
FOR y = 13 TO 1 STEP -1
  FOR x = 15 TO 1 STEP -1
    READ clr
    PSET (x, y), clr
  NEXT x
NEXT y
GET (1, 1)-(15, 13), firetopleftcorner



'****************************************************************************
'                                MAIN PROGRAM
'****************************************************************************

DO
verystart
DO
SELECT CASE nextroom
  CASE 1
    roomone
  CASE 2
    roomtwo
  CASE 3
    roomthree
  CASE 4
    roomfour
  CASE 5
    roomfive
  CASE 6
    roomsix
  CASE 7
    roomseven
  CASE 8
    roomeight
  CASE 9
    roomnine
  CASE 10
    roomten
  CASE 11
    roomeleven
  CASE 998
    EXIT DO
  CASE 999
    fin

END SELECT
LOOP UNTIL key$ = CHR$(27)
LOOP UNTIL key$ = CHR$(27)
END
'****************************************************************************
'                               GRAPHICS DATA
'****************************************************************************
'grass
DATA 120,120,120,002,002,120,002,002,120,002,120,002,048,002,048
DATA 002,120,120,002,002,120,002,002,120,002,120,002,048,002,048
DATA 002,120,002,048,002,120,002,002,048,002,002,002,048,002,048
DATA 002,120,120,048,002,120,002,002,048,002,002,048,002,120,120
DATA 002,120,002,048,048,002,048,048,048,048,002,048,002,002,120
DATA 048,002,002,048,048,002,002,048,002,048,002,048,002,120,002
DATA 048,002,048,120,048,002,002,048,002,048,120,048,002,120,002
DATA 048,002,048,002,120,120,120,002,002,002,120,120,002,120,002
DATA 048,002,048,002,120,048,120,002,002,002,002,120,002,002,002
DATA 002,002,048,002,120,048,002,002,048,002,002,048,002,002,048
DATA 002,048,048,002,120,048,120,002,048,002,002,048,002,002,048
DATA 002,048,002,002,120,048,120,120,120,002,120,048,002,002,048
DATA 002,048,120,002,120,002,120,002,120,120,120,048,002,120,048





'fire
DATA 043,040,043,042,040,040,040,040,040,040,040,042,043,043,043
DATA 042,043,043,042,040,040,040,040,040,040,040,042,040,043,042
DATA 040,042,042,042,040,040,040,040,040,040,040,042,043,042,040
DATA 040,040,040,042,040,040,040,040,040,040,040,042,042,042,040
DATA 040,040,040,042,040,040,040,040,040,040,040,042,042,040,040
DATA 040,040,040,040,042,043,043,040,043,040,043,042,040,040,040
DATA 040,040,040,040,040,043,043,043,042,043,042,043,040,040,040
DATA 040,040,040,040,040,043,042,042,042,042,042,043,040,040,040
DATA 040,040,040,040,043,042,040,040,040,040,042,043,040,040,040
DATA 040,040,040,040,043,042,040,040,040,040,042,043,043,040,040
DATA 040,040,040,043,042,040,040,040,040,040,040,042,043,040,040
DATA 040,040,040,043,042,040,040,040,040,040,040,042,043,040,040
DATA 040,040,043,042,040,040,040,040,040,040,040,042,043,040,040


'soot
DATA 20,22,28,20,20,22,28,223,28,20,22,223,28,20,22
DATA 28,20,22,223,28,20,223,28,20,22,223,28,22,28,223
DATA 20,28,20,22,223,28,20,22,22,28,20,20,22,28,223
DATA 20,22,28,20,223,28,20,22,28,223,28,20,22,20,22
DATA 28,20,22,223,28,20,223,28,20,22,223,28,22,28,223
DATA 20,22,28,20,20,22,28,223,28,20,22,223,28,20,22
DATA 20,28,20,22,223,28,20,22,22,28,20,20,22,28,223
DATA 20,22,28,20,223,28,20,22,28,22,223,20,28,20,22
DATA 28,20,22,223,28,20,223,28,20,28,223,28,20,28,223
DATA 20,22,28,20,223,28,20,22,28,223,223,20,28,20,22
DATA 20,28,20,22,223,28,20,22,22,28,20,20,22,28,223
DATA 20,22,28,20,20,22,28,223,28,20,22,223,28,20,22
DATA 20,28,20,22,223,28,20,22,22,28,20,20,22,28,223


'bridge
DATA 182,182,182,182,182,182,182,182,182,182,182,182,182,182,182
DATA 186,182,182,006,182,006,182,114,186,182,006,182,006,182,114
DATA 186,006,182,006,182,006,006,114,186,006,182,182,006,006,114
DATA 186,006,182,182,006,006,182,114,186,006,006,006,006,006,114
DATA 186,006,006,006,006,006,182,114,186,006,006,006,006,006,114
DATA 186,182,006,006,006,182,006,114,186,006,182,006,182,006,114
DATA 186,182,006,182,182,182,006,114,186,006,006,006,182,182,114
DATA 186,006,182,006,182,006,006,114,186,182,006,182,006,182,114
DATA 186,006,006,182,006,006,182,114,186,006,182,182,182,006,114
DATA 186,006,006,006,006,006,182,114,186,006,006,006,182,006,114
DATA 186,182,006,182,006,182,182,114,186,182,006,182,006,006,114
DATA 186,006,182,182,006,182,006,114,186,006,006,006,182,006,114
DATA 114,114,114,114,114,114,114,114,114,114,114,114,114,114,114


' block
DATA 07,08,08,08,08,08,08,08,08,08,08,08,08,08,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,00,00,00,00,00,00,00,00,00,00,00,00,00,07


'gem

DATA 120,120,120,002,002,114,114,114,114,114,120,002,048,002,048
DATA 002,120,120,114,114,015,004,004,004,015,114,114,048,002,048
DATA 002,120,114,015,015,040,040,040,040,040,015,015,114,002,048
DATA 002,114,004,040,040,042,042,015,042,042,040,040,004,114,120
DATA 114,004,040,040,042,042,015,015,015,042,042,040,040,004,114
DATA 114,004,015,015,040,042,042,015,042,042,040,015,015,004,114
DATA 114,015,015,015,015,040,040,040,040,040,015,015,015,015,114
'declining
DATA 048,114,015,015,015,004,004,004,004,004,015,015,015,114,002
DATA 048,002,114,114,114,114,114,114,114,114,114,114,114,002,002
DATA 002,002,048,114,114,065,067,067,067,065,114,114,002,002,048
DATA 002,048,048,114,065,065,067,067,067,065,065,114,002,002,048
DATA 002,048,002,114,114,065,065,065,065,065,114,114,002,002,048
DATA 002,048,120,002,114,114,114,114,114,114,114,048,002,120,048



' map1map1map1map1mpamap1map1ampampampamap1map1map1map1amap1map1
DATA 01,01,01,08,01,03,03,03,03,03,01,01,01,01,08,01,02,01,01,01,00
DATA 01,02,02,02,15,03,03,03,03,03,14,02,02,02,02,02,02,02,02,01,00
DATA 01,02,02,01,03,03,03,03,03,03,03,01,02,02,02,02,02,02,02,01,00
DATA 01,02,02,01,03,03,03,03,03,03,03,01,02,02,02,02,02,02,02,01,00
DATA 01,02,02,01,03,03,03,03,03,03,03,01,02,02,02,02,02,02,02,01,00
DATA 01,02,02,01,03,03,03,03,03,03,03,01,02,02,02,02,02,02,02,02,00
DATA 08,02,02,01,03,03,03,03,03,03,03,01,02,02,02,02,02,02,02,01,00
DATA 01,02,02,02,03,03,03,03,03,03,03,01,02,02,02,02,02,02,02,08,00
DATA 01,02,02,02,13,03,03,03,03,03,03,01,02,02,02,02,02,02,02,01,00
DATA 01,02,02,02,02,03,03,03,03,03,03,02,02,02,02,02,02,02,02,01,00
DATA 01,02,02,02,02,13,03,03,03,03,16,02,02,02,02,02,02,02,02,01,00
DATA 01,02,02,02,02,02,05,05,05,05,02,02,02,02,02,02,02,02,02,01,00
DATA 01,02,02,02,02,02,13,03,03,16,02,02,02,02,02,02,02,02,02,01,00
DATA 01,01,08,01,01,01,01,03,03,01,01,01,01,01,08,01,01,01,01,01,00
DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00



'parrot
DATA 000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
DATA 000,000,000,000,000,000,000,000,028,028,028,000,000,000,000
DATA 000,000,000,000,000,000,000,028,015,015,015,028,000,000,000
DATA 000,000,000,000,000,000,000,028,015,000,015,028,000,000,000
DATA 000,000,000,000,000,000,000,028,015,015,015,028,000,000,000
DATA 000,000,000,000,000,000,008,008,028,028,028,028,000,000,000
DATA 000,000,000,000,000,000,008,008,008,028,028,028,000,000,000
DATA 000,000,000,000,000,000,008,008,008,028,028,028,000,000,000
DATA 000,000,000,000,000,000,008,008,008,028,028,000,000,000,000
DATA 000,000,000,000,040,040,008,028,028,028,028,000,000,000,000
DATA 000,000,000,040,040,040,028,028,028,028,000,000,000,000,000
DATA 000,000,000,000,000,000,020,000,000,020,000,000,000,000,000
DATA 000,000,000,000,000,020,020,020,020,020,020,000,000,000,000


'parrot shadow
DATA 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
DATA 255,255,255,255,255,255,255,255,028,028,028,255,255,255,255
DATA 255,255,255,255,255,255,255,028,015,015,015,028,255,255,255
DATA 255,255,255,255,255,255,255,008,015,000,015,028,000,255,255
DATA 255,255,255,255,255,255,255,008,015,015,015,028,000,000,255
DATA 255,255,255,255,255,255,008,008,008,008,008,028,000,000,000
DATA 255,255,255,255,255,255,008,008,008,008,008,028,000,255,255
DATA 255,255,255,255,255,255,008,008,008,008,008,028,255,255,255
DATA 255,255,255,255,255,255,008,008,008,008,008,255,255,255,255
DATA 255,255,255,255,040,040,008,008,008,008,008,255,255,255,255
DATA 255,255,255,040,040,040,008,008,008,008,255,255,255,255,255
DATA 255,255,255,255,255,255,020,255,255,020,255,255,255,255,255
DATA 255,255,255,255,255,020,020,020,020,020,020,255,255,255,255

'parrotside
DATA 000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
DATA 000,000,000,000,000,000,000,000,028,028,028,000,000,000,000
DATA 000,000,000,000,000,000,000,028,015,015,015,028,000,000,000
DATA 000,000,000,000,000,000,000,028,015,000,015,028,000,000,000
DATA 000,000,000,000,000,000,000,028,015,015,015,028,000,000,000
DATA 000,000,000,000,000,000,008,008,028,028,028,028,000,000,000
DATA 000,000,000,000,000,000,008,008,008,028,028,028,000,000,000
DATA 000,000,000,000,000,000,008,008,008,028,028,028,000,000,000
DATA 000,000,000,000,000,000,008,008,008,028,028,000,000,000,000
DATA 000,000,000,000,040,040,008,028,028,028,028,000,000,000,000
DATA 000,000,000,040,040,040,028,028,028,028,000,000,000,000,000
DATA 000,000,000,000,000,000,020,000,000,020,000,000,000,000,000
DATA 000,000,000,000,000,020,020,020,020,020,020,000,000,000,000


'parrot shadow side
DATA 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
DATA 255,255,255,255,255,255,255,255,028,028,028,255,255,255,255
DATA 255,255,255,255,255,255,255,028,015,015,015,028,255,255,255
DATA 255,255,255,255,255,255,255,008,015,000,015,028,000,255,255
DATA 255,255,255,255,255,255,255,008,015,015,015,028,000,000,255
DATA 255,255,255,255,255,255,008,008,008,008,008,028,000,000,000
DATA 255,255,255,255,255,255,008,008,008,008,008,028,000,255,255
DATA 255,255,255,255,255,255,008,008,008,008,008,028,255,255,255
DATA 255,255,255,255,255,255,008,008,008,008,008,255,255,255,255
DATA 255,255,255,255,040,040,008,008,008,008,008,255,255,255,255
DATA 255,255,255,040,040,040,008,008,008,008,255,255,255,255,255
DATA 255,255,255,255,255,255,020,255,255,020,255,255,255,255,255
DATA 255,255,255,255,255,020,020,020,020,020,020,255,255,255,255



'      map2map2map2

DATA 1,1,1,8,1,1,1,03,03,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,2,2,2,2,2,2,03,03,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,03,03,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,03,03,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,6,2,2,1,0
DATA 2,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,8,0
DATA 1,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,5,5,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,2,1,0
DATA 1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''map3
DATA 1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,7,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0


'manmanmanman

DATA 002,002,002,002,002,040,040,040,040,040,040,002,002,002,002
DATA 120,120,048,120,040,040,040,040,040,040,040,040,040,006,048
DATA 120,120,048,002,006,006,006,066,066,006,066,120,120,000,048
DATA 002,002,048,006,066,006,006,066,066,066,006,066,066,006,048
DATA 002,002,048,006,006,066,066,066,066,006,006,006,006,006,048
DATA 002,120,002,120,066,066,066,066,066,066,066,066,002,002,048
DATA 002,120,120,006,006,040,006,006,006,120,002,002,002,120,048
DATA 120,120,006,006,006,040,006,006,040,006,006,006,002,120,048
DATA 120,006,006,006,006,040,040,040,040,006,006,006,006,120,048
DATA 120,066,066,006,040,066,040,040,066,040,006,066,066,002,048
DATA 120,066,066,040,040,040,040,040,040,040,040,066,066,120,048
DATA 048,048,006,006,006,006,120,120,006,006,006,006,048,048,048
DATA 048,006,006,006,006,006,048,048,006,006,006,006,006,048,048




'manback
DATA 000,000,000,000,000,040,040,040,040,040,040,000,000,000,000
DATA 000,000,000,000,040,040,040,040,040,040,040,040,040,000,000
DATA 000,000,000,000,006,006,006,066,066,006,066,000,000,000,000
DATA 000,000,000,006,066,006,006,066,066,066,006,066,066,006,000
DATA 000,000,000,006,006,066,066,066,066,006,006,006,006,006,000
DATA 000,000,000,000,066,066,066,066,066,066,066,066,000,000,000
DATA 000,000,000,006,006,040,006,006,006,000,000,000,000,000,000
DATA 000,000,006,006,006,040,006,006,040,006,006,006,000,000,000
DATA 000,006,006,006,006,040,040,040,040,006,006,006,006,000,000
DATA 000,066,066,006,040,066,040,040,066,040,006,066,066,000,000
DATA 000,066,066,040,040,040,040,040,040,040,040,066,066,000,000
DATA 000,000,006,006,006,006,000,000,006,006,006,006,000,000,000
DATA 000,006,006,006,006,006,000,000,006,006,006,006,006,000,000

'manbacksh
DATA 255,255,255,255,255,040,040,040,040,040,040,255,255,255,255
DATA 255,255,255,255,040,040,040,040,040,040,040,040,040,255,255
DATA 255,255,255,255,006,006,006,066,066,006,066,255,255,255,255
DATA 255,255,255,006,066,006,006,066,066,066,006,066,066,006,255
DATA 255,255,255,006,006,066,066,066,066,006,006,006,006,006,255
DATA 255,255,255,255,066,066,066,066,066,066,066,066,255,255,255
DATA 255,255,255,006,006,040,006,006,006,255,255,255,255,255,255
DATA 255,255,006,006,006,040,006,006,040,006,006,006,255,255,255
DATA 255,006,006,006,006,040,040,040,040,006,006,006,006,255,255
DATA 255,066,066,006,040,066,040,040,066,040,006,066,066,255,255
DATA 255,066,066,040,040,040,040,040,040,040,040,066,066,255,255
DATA 255,255,006,006,006,006,255,255,006,006,006,006,255,255,255
DATA 255,006,006,006,006,006,255,255,006,006,006,006,006,255,255


'manfront
DATA 002,002,002,002,002,040,040,040,040,040,040,002,002,002,002
DATA 120,120,048,120,040,040,040,040,040,040,040,040,002,002,048
DATA 120,120,048,002,006,066,006,066,006,066,006,120,120,002,048
DATA 002,002,048,006,066,066,066,066,066,066,066,006,120,048,048
DATA 002,002,048,006,006,006,066,066,066,006,006,006,120,048,048
DATA 002,120,002,120,066,066,006,006,006,066,066,120,120,048,048
DATA 002,120,120,006,006,040,006,006,040,006,006,002,002,120,048
DATA 120,120,006,006,006,040,006,006,040,006,006,006,002,120,048
DATA 120,006,006,006,006,040,040,040,040,006,006,006,006,120,048
DATA 120,066,066,006,040,066,040,040,066,040,006,066,066,002,048
DATA 120,066,066,040,040,040,040,040,040,040,040,066,066,120,048
DATA 048,048,006,006,006,006,120,120,006,006,006,006,048,048,048
DATA 048,006,006,006,006,006,048,048,006,006,006,006,006,048,048

'manhead
DATA 002,002,002,002,002,040,040,040,040,040,002,002,002,002,002
DATA 120,120,048,120,040,040,040,040,040,040,040,002,002,002,048
DATA 120,120,048,040,040,040,040,040,040,040,040,040,120,002,048
DATA 002,002,048,040,040,040,040,040,040,040,040,040,120,048,048
DATA 002,002,048,006,006,06,006,006,006,06,06,006,120,048,048
DATA 002,120,002,120,06,06,06,06,06,06,06,120,120,048,048
DATA 002,120,120,006,006,040,006,006,040,006,006,002,002,120,048
DATA 120,120,006,006,006,040,006,006,040,006,006,006,002,120,048
DATA 120,006,006,006,006,040,040,040,040,006,006,006,006,120,048
DATA 120,066,066,006,040,040,040,040,040,040,006,066,066,002,048
DATA 120,066,066,040,040,040,040,040,040,040,040,066,066,120,048
DATA 048,048,006,006,006,006,120,120,006,006,006,006,048,048,048
DATA 048,006,006,006,006,006,048,048,006,006,006,006,006,048,048



' blockchip
DATA 07,08,08,08,08,08,08,08,08,08,08,08,08,08,00
DATA 20,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 24,28,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 20,24,20,07,07,07,07,07,07,07,24,07,07,07,00
DATA 08,20,24,24,07,07,07,20,24,24,07,07,07,07,00
DATA 08,07,07,28,24,20,28,24,28,07,07,07,07,07,00
DATA 08,07,07,07,07,24,24,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,20,20,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,28,24,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,24,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,07,07,07,07,07,07,07,07,07,07,07,07,07,00
DATA 08,00,00,00,00,00,00,00,00,00,00,00,00,00,07


''''''''''''''''''''''   Top wall''''''''''''''''''''''''''''''''''''''map 4
DATA 1,     1,1,1,1,1,1,8,1,1,1,1,1,1,2,1,1,1,1,     1,          0
' side wall              bulk                     end wall       0
DATA 2,     2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 2,     2,2,2,2,2,2,2,2,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 2,     2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,     8,          0
DATA 1,     3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,2,2,     2,          0
DATA 2,     2,2,2,2,2,2,3,2,2,2,2,2,3,3,3,2,3,3,     1,          0
DATA 1,     3,3,2,3,3,2,3,3,3,3,3,2,3,3,3,2,3,3,     1,          0
DATA 1,     3,3,2,3,3,2,3,3,3,3,3,2,3,3,3,2,3,3,     1,          0
DATA 8,     3,3,2,3,3,2,3,3,3,3,3,2,3,3,3,2,3,3,     1,          0
DATA 1,     3,3,2,3,3,2,3,3,3,3,3,2,2,2,3,2,3,2,     1,          0
DATA 2,     2,3,2,3,3,2,3,2,2,2,2,3,3,2,3,2,3,2,     1,          0

DATA 1,     1,1,2,1,1,2,1,2,1,8,2,1,1,2,1,2,1,1,     1,          0
'                         bottom wall

DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0





''''''''''''''''''''''   Top wall''''''''''''''''''''''''''''''''''''''map 5
DATA 1,     1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,     1,          0
' side wall                bulk                   end wall       0
DATA 1,     3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,     2,          0
DATA 1,     3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,     1,          0
DATA 1,     3,2,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,     2,          0
DATA 1,     3,2,2,2,2,2,3,2,3,3,3,3,3,3,3,3,3,3,     1,          0
DATA 1,     3,2,3,3,3,2,3,2,3,3,2,2,2,2,2,2,2,2,     2,          0
DATA 1,     3,2,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,     1,          0
DATA 8,     3,2,2,2,2,3,3,2,2,2,2,2,2,2,2,2,2,2,     2,          0
DATA 1,     3,3,2,3,2,3,3,2,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 1,     3,3,2,3,2,3,3,2,2,2,3,3,3,2,3,3,3,3,     1,          0
DATA 8,     3,2,2,3,2,3,3,2,3,2,3,3,3,2,3,3,3,3,     1,          0
DATA 1,     3,2,3,3,2,3,3,2,3,2,3,2,3,2,3,3,3,3,     1,          0
DATA 1,     3,2,3,3,2,3,3,2,3,2,3,2,3,2,3,3,2,2,     2,          0

DATA 1,     1,2,1,1,2,1,1,2,1,2,1,2,1,2,1,1,2,1,     1,          0
'                         bottom wall

DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

''''''''''''''''''''''   Top wall''''''''''''''''''''''''''''''''''''''map 6
DATA 1,     1,2,1,1,2,1,8,1,1,2,1,2,1,2,1,1,2,1,     1,          0
' side wall              bulk                     end wall       0
DATA 1,     3,2,2,3,2,3,3,3,3,2,3,2,3,2,3,3,2,2,     2,          0
DATA 1,     3,3,3,3,2,2,2,2,2,2,3,2,2,2,3,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,     2,          0
DATA 1,     3,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,3,3,     1,          0
DATA 1,     3,2,3,3,3,3,3,3,3,3,3,2,3,2,3,3,2,2,     2,          0
DATA 1,     3,2,2,2,2,2,2,3,3,2,3,2,3,2,3,3,2,3,     8,          0
DATA 8,     3,2,3,3,3,3,2,3,3,2,3,2,2,2,3,3,2,3,     1,          0
DATA 1,     3,2,3,3,3,3,2,2,2,2,3,3,3,3,3,3,2,2,     2,          0
DATA 1,     3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,     1,          0
DATA 8,     3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,     2,          0
DATA 1,     3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,     2,          0

DATA 1,     1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,     1,          0
'                      bottom wall

DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
''''''''''''''''''''''   Top wall''''''''''''''''''''''''''''''''''''''map 7
DATA 1,     1,1,2,1,1,2,8,2,1,1,2,1,1,2,1,2,1,1,     1,          0
' side wall              bulk                     end wall       0
DATA 2,     2,2,2,3,3,2,3,2,3,3,2,3,3,2,2,2,3,3,     1,          0
DATA 1,     3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,3,3,3,     1,          0
DATA 2,     2,2,2,2,2,2,3,2,3,3,2,2,2,2,3,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,     1,          0
DATA 2,     2,2,2,3,3,2,2,2,2,2,2,2,3,2,3,3,3,3,     8,          0
DATA 1,     3,3,3,3,3,2,3,3,3,3,3,2,3,2,3,3,3,3,     1,          0
DATA 8,     3,3,3,3,3,2,3,3,3,3,3,2,3,2,3,3,3,3,     1,          0
DATA 2,     2,2,2,2,2,2,3,3,3,3,3,2,3,2,3,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,     1,          0
DATA 2,     2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,3,3,3,     1,          0
DATA 1,     3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,     1,          0
DATA 2,     2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,9,     1,          0

DATA 1,     1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,     1,          0
'                         bottom wall

DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0






'parrotback


DATA 000,000,000,       000,000,000,028,028,028,000,000,000,        000,000,0
DATA 000,000,000,       000,000,028,028,028,028,028,000,000,        000,000  ,0
DATA 000,000,000,       000,000,028,028,028,028,028,000,000,        000,000    ,0
DATA 000,000,000,       000,000,028,028,028,028,028,000,000,        000,000      ,0
DATA 000,000,000,       000,008,028,028,028,028,028,008,000,        000,000        ,0
DATA 000,000,000,       000,008,008,028,028,028,008,008,000,        000,000          ,0
DATA 000,000,000,       000,008,008,028,028,028,008,008,000,        000,000             ,0
DATA 000,000,000,       008,008,008,008,028,008,008,008,008,        000,000             ,0
DATA 000,000,000,       008,008,008,008,028,008,008,008,008,        000,000             ,0
DATA 000,000,000,       000,008,008,008,028,008,008,008,000,        000,000             ,0
DATA 000,000,000,       000,000,020,040,040,040,020,000,000,        000,000             ,0
DATA 000,000,000,       000,000,020,040,040,040,020,000,000,        000,000             ,0
DATA 000,000,000,       000,020,020,000,040,000,020,020,000,        000,000             ,0

'parronbackshadow
DATA 255,255,255,       255,255,255,028,028,028,255,255,255,        255,255 ,255
DATA 255,255,255,       255,255,028,028,028,028,028,255,255,        255,255 ,255
DATA 255,255,255,       255,255,028,028,028,028,028,255,255,        255,255 ,255
DATA 255,255,255,       255,255,028,028,028,028,028,255,255,        255,255 ,255
DATA 255,255,255,       255,008,008,008,008,008,008,008,255,        255,255 ,255
DATA 255,255,255,       255,008,008,008,008,008,008,008,255,        255,255 ,255
DATA 255,255,255,       255,008,008,008,008,008,008,008,255,        255,255 ,255
DATA 255,255,255,       008,008,008,008,008,008,008,008,008,        255,255 ,255
DATA 255,255,255,       008,008,008,008,008,008,008,008,008,        255,255 ,255
DATA 255,255,255,       255,008,008,008,008,008,008,008,255,        255,255 ,255
DATA 255,255,255,       255,255,000,040,040,040,000,255,255,        255,255 ,255
DATA 255,255,255,       255,255,000,040,040,040,000,255,255,        255,255 ,255
DATA 255,255,255,       255,000,000,255,040,255,000,000,255,        255,255 ,255









'parrotfront
DATA 000,000,000,       000,000,030,028,028,028,030,000,000,            000,        000,000
DATA 000,000,000,       000,000,000,030,028,030,000,000,000,            000,        000,000
DATA 000,000,000,       000,000,030,028,028,028,030,000,000,            000,        000,000
DATA 000,000,000,       000,000,028,000,000,000,028,000,000,            000,        000,000
DATA 000,000,000,       000,008,028,000,000,000,028,008,000,            000,        000,000
DATA 000,000,000,       000,008,028,028,000,028,028,008,000,            000,        000,000
DATA 000,000,000,       008,008,028,028,028,028,028,008,008,            000,        000,000
DATA 000,000,000,       008,008,028,028,028,028,028,008,008,            000,        000,000
DATA 000,000,000,       008,008,008,028,028,028,008,008,008,            000,        000,000
DATA 000,000,000,       000,000,020,040,040,040,020,000,000,            000,        000,000
DATA 000,000,000,       000,000,020,040,040,040,020,000,000,            000,        000,000
DATA 000,000,000,       000,020,020,020,040,020,020,020,000,            000,        000,000
DATA 000,000,000,       000,000,020,000,000,000,020,000,000,            000,        000,000

'parrotfrontshadow
DATA 255,255,255,       255,255,030,028,028,028,030,255,255,            255,        255,255
DATA 255,255,255,       255,255,000,030,028,030,028,255,255,            255,        255,255
DATA 255,255,255,       255,255,030,028,028,028,030,255,255,            255,        255,255
DATA 255,255,255,       255,255,000,008,008,008,008,255,255,            255,        255,255
DATA 255,255,255,       255,008,028,008,008,008,028,008,255,            255,        255,255
DATA 255,255,255,       255,008,028,028,008,028,028,008,255,            255,        255,255
DATA 255,255,255,       008,008,028,028,028,028,028,008,008,            255,        255,255
DATA 255,255,255,       008,008,028,028,028,028,028,008,008,            255,        255,255
DATA 255,255,255,       008,008,008,028,028,028,008,008,008,            255,        255,255
DATA 255,255,255,       255,255,020,040,040,040,020,255,255,            255,        255,255
DATA 255,255,255,       255,255,020,040,040,040,020,255,255,            255,        255,255
DATA 255,255,255,       255,020,020,020,040,020,020,020,255,            255,        255,255
DATA 255,255,255,       255,255,020,255,255,255,020,255,255,            255,        255,255




''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''star
DATA 000,000,000,000,000,044,044,044,044,044,000,000,000,000,000
DATA 000,000,000,000,000,044,044,044,044,044,000,000,000,000,000
DATA 000,000,000,000,044,044,044,044,044,044,044,000,000,000,000
DATA 044,044,044,044,044,000,044,044,044,000,044,044,044,044,044
DATA 044,044,044,044,044,000,044,044,044,000,044,044,044,044,044
DATA 044,044,044,044,044,000,044,044,044,000,044,044,044,044,044
DATA 000,000,044,044,044,044,044,044,044,044,044,044,044,000,000
DATA 000,000,000,044,044,044,044,044,044,044,044,044,000,000,000
DATA 000,000,044,044,044,044,044,044,044,044,044,044,044,000,000
DATA 000,000,044,044,044,044,044,044,044,044,044,044,044,000,000
DATA 000,044,044,044,044,044,000,000,000,044,044,044,044,044,000
DATA 000,044,044,044,000,000,000,000,000,000,000,044,044,044,000
DATA 000,000,000,000,000,000,000,000,000,000,000,000,000,000,000


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''starsh
DATA 255,255,255,255,255,044,044,044,044,044,255,255,255,255,255
DATA 255,255,255,255,255,044,044,044,044,044,255,255,255,255,255
DATA 255,255,255,255,044,044,044,044,044,044,044,255,255,255,255
DATA 044,044,044,044,044,000,044,044,044,000,044,044,044,044,044
DATA 044,044,044,044,044,000,044,044,044,000,044,044,044,044,044
DATA 044,044,044,044,044,000,044,044,044,000,044,044,044,044,044
DATA 255,255,044,044,044,044,044,044,044,044,044,044,044,255,255
DATA 255,255,255,044,044,044,044,044,044,044,044,044,255,255,255
DATA 255,255,044,044,044,044,044,044,044,044,044,044,044,255,255
DATA 255,255,044,044,044,044,044,044,044,044,044,044,044,255,255
DATA 255,044,044,044,044,044,255,255,255,044,044,044,044,044,255
DATA 255,044,044,044,255,255,255,255,255,255,255,044,044,044,255
DATA 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255


'hardfire
DATA 024,021,024,023,021,021,021,021,021,021,021,023,024,024,024
DATA 023,024,024,023,021,021,021,021,021,021,021,023,021,024,023
DATA 021,023,023,023,021,021,021,021,021,021,021,023,024,023,021
DATA 021,021,021,023,021,021,021,021,021,021,021,023,023,023,021
DATA 021,021,021,023,021,021,021,021,021,021,021,023,023,021,021
DATA 021,021,021,021,023,024,024,021,024,021,024,023,021,021,021
DATA 021,021,021,021,021,024,024,024,023,024,023,024,021,021,021
DATA 021,021,021,021,021,024,023,023,023,023,023,024,021,021,021
DATA 021,021,021,021,024,023,021,021,021,021,023,024,021,021,021
DATA 021,021,021,021,024,023,021,021,021,021,023,024,024,021,021
DATA 021,021,021,024,023,021,021,021,021,021,021,023,024,021,021
DATA 021,021,021,024,023,021,021,021,021,021,021,023,024,021,021
DATA 021,021,024,023,021,021,021,021,021,021,021,023,024,021,021

'cat
DATA 000,016,016,000,000,000,016,016,000,000,000,000,000,000,000
DATA 000,016,016,016,000,016,016,016,000,000,000,000,000,000,000
DATA 000,016,016,016,016,016,016,016,000,000,000,000,000,000,000
DATA 000,016,016,015,016,015,016,016,000,000,000,000,000,000,000
DATA 000,016,016,016,015,016,016,016,000,000,000,000,000,000,000
DATA 000,016,016,016,016,016,016,016,016,000,000,000,000,016,000
DATA 000,016,016,016,016,016,016,016,016,016,016,016,016,016,000
DATA 000,016,016,016,016,016,016,016,016,016,016,000,000,000,000
DATA 000,016,016,016,016,016,016,016,016,016,016,000,000,000,000
DATA 000,000,016,016,016,016,016,016,016,016,016,000,000,000,000
DATA 000,000,016,000,016,000,000,016,000,000,016,000,000,000,000
DATA 000,000,016,000,016,000,000,016,000,000,016,000,000,000,000
DATA 000,016,016,016,016,000,016,016,000,016,016,000,000,000,000

'catshadow
DATA 255,016,016,255,255,255,016,016,255,255,255,255,255,255,255
DATA 255,016,016,016,255,016,016,016,255,255,255,255,255,255,255
DATA 255,016,016,016,016,016,016,016,255,255,255,255,255,255,255
DATA 255,016,016,015,016,015,016,016,255,255,255,255,255,255,255
DATA 255,016,016,016,015,016,016,016,255,255,255,255,255,255,255
DATA 255,016,016,016,016,016,016,016,016,255,255,255,255,016,255
DATA 255,016,016,016,016,016,016,016,016,016,016,016,016,016,255
DATA 255,016,016,016,016,016,016,016,016,016,016,255,255,255,255
DATA 255,016,016,016,016,016,016,016,016,016,016,255,255,255,255
DATA 255,255,016,016,016,016,016,016,016,016,016,255,255,255,255
DATA 255,255,016,255,016,255,255,016,255,255,016,255,255,255,255
DATA 255,255,016,255,016,255,255,016,255,255,016,255,255,255,255
DATA 255,016,016,016,016,255,016,016,255,016,016,255,255,255,255

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''mapeight
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,1,1,1,1,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,1,1,1,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''mapnine
DATA 1,1,1,1,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,20,1,1,1,1,1,1,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''mapten
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,20,1,1,1,1,1,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''map11
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,9,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,12,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

''''''''''''''glove
DATA 000,000,000,000,000,000,000,000,000,000,000,000,000,000,000
DATA 000,000,000,000,000,000,000,015,020,000,015,020,000,000,000
DATA 000,000,000,000,015,020,000,015,015,000,015,015,000,000,000
DATA 000,000,000,000,015,015,000,015,015,000,015,015,000,000,000
DATA 000,000,000,000,015,015,000,015,015,000,015,015,000,020,000
DATA 000,000,000,000,015,015,000,015,015,000,015,015,000,015,000
DATA 000,000,000,000,015,015,015,015,015,015,015,015,000,015,000
DATA 000,000,015,000,015,015,015,015,015,015,015,015,015,015,000
DATA 000,000,015,000,015,015,015,015,015,015,015,015,015,015,000
DATA 000,000,015,000,015,015,000,015,015,000,015,015,015,015,000
DATA 000,000,015,000,015,015,000,015,015,000,015,015,015,015,000
DATA 000,000,000,015,015,015,015,015,015,015,015,015,015,000,000
DATA 000,000,000,000,000,000,000,000,000,000,000,000,000,000,000


''''''''''''''glovesh
DATA 255,255,255,255,255,255,255,000,000,255,000,000,255,255,255
DATA 255,255,255,255,000,000,000,015,020,000,015,020,000,255,255
DATA 255,255,255,000,015,020,000,015,015,000,015,015,000,255,255
DATA 255,255,255,000,015,015,000,015,015,000,015,015,000,000,255
DATA 255,255,255,000,015,015,000,015,015,000,015,015,000,020,000
DATA 255,255,255,000,015,015,000,015,015,000,015,015,000,015,000
DATA 255,255,000,000,015,015,015,015,015,015,015,015,000,015,000
DATA 255,000,015,000,015,015,015,015,015,015,015,015,015,015,000
DATA 255,000,015,000,015,015,015,015,015,015,015,015,015,015,000
DATA 255,000,015,000,015,015,000,015,015,000,015,015,015,015,000
DATA 255,000,015,000,015,015,000,015,015,000,015,015,015,015,000
DATA 255,255,000,015,015,015,015,015,015,015,015,015,015,000,255
DATA 255,255,255,000,000,000,000,000,000,000,000,000,000,255,255

''''''''''''''brick
DATA 000,000,040,040,112,004,112,000,112,000,040,004,112,004,112
DATA 112,112,000,004,004,004,000,004,112,004,000,004,112,112,000
DATA 112,112,112,000,112,000,004,040,112,112,004,000,004,000,004
DATA 004,004,112,004,000,040,040,112,004,004,112,112,000,004,040
DATA 040,040,112,004,112,000,004,040,004,112,004,004,004,000,112
DATA 004,040,004,004,112,112,000,004,040,004,040,112,112,112,000
DATA 000,004,040,004,004,112,112,000,040,040,004,004,004,112,000
DATA 040,000,004,040,004,004,000,040,000,004,040,004,040,000,040
DATA 040,112,000,040,040,000,040,004,004,000,040,040,000,040,004
DATA 004,004,004,000,000,004,040,004,040,112,000,000,004,040,004
DATA 112,004,112,000,040,040,004,040,112,112,000,040,040,040,040
DATA 004,112,000,040,004,040,004,112,112,000,040,040,004,112,112
DATA 004,000,040,040,004,004,112,112,000,040,040,004,112,004,004

'grass
'DATA 120,120,120,002,002,120,002,002,120,002,120,002,048,002,048
'DATA 002,120,120,002,002,120,002,002,120,002,120,002,048,002,048
'DATA 002,120,002,048,002,120,002,002,048,002,002,002,048,002,048
'DATA 002,120,120,048,002,120,002,002,048,002,002,048,002,120,120
'DATA 002,120,002,048,048,002,048,048,048,048,002,048,002,002,120
'DATA 048,002,002,048,048,002,002,048,002,048,002,048,002,120,002
'DATA 048,002,048,120,048,002,002,048,002,048,120,048,002,120,002
'DATA 048,002,048,002,120,120,120,002,002,002,120,120,002,120,002
'DATA 048,002,048,002,120,048,120,002,002,002,002,120,002,002,002
'DATA 002,002,048,002,120,048,002,002,048,002,002,048,002,002,048
'DATA 002,048,048,002,120,048,120,002,048,002,002,048,002,002,048
'DATA 002,048,002,002,120,048,120,120,120,002,120,048,002,002,048
'DATA 002,048,120,002,120,002,120,002,120,120,120,048,002,120,048



'firebottomrightcorner
fire:
DATA 040,040,043,042,040,040,040,040,040,040,040,042,043,043,043
DATA 002,043,043,042,040,040,040,040,040,040,040,042,040,043,042
DATA 002,120,042,042,040,040,040,040,040,040,040,042,043,042,040
DATA 002,120,040,042,040,040,040,040,040,040,040,042,042,042,040
DATA 002,120,040,042,040,040,040,040,040,040,040,042,042,040,040
DATA 048,048,040,040,042,043,043,040,043,040,043,042,040,040,040
DATA 048,002,040,040,040,043,043,043,042,043,042,043,040,040,040
DATA 048,048,040,040,040,043,042,042,042,042,042,043,040,040,040
DATA 002,048,040,040,043,042,040,040,040,040,042,043,040,040,040
DATA 002,048,048,040,043,042,040,040,040,040,042,043,043,040,040
DATA 002,120,002,048,042,042,040,040,040,040,040,040,043,040,040
DATA 048,120,002,048,042,043,040,040,040,040,040,040,043,040,040
DATA 048,120,002,048,048,044,040,040,040,040,040,040,043,040,040


SUB fin
CLS
LOCATE 13, 16
PRINT "GAME OVER"

FOR i = 1 TO 60
SOUND 50 * i, .1
SOUND 3000 - (50 * i), .1
NEXT i
sleeep (2)
END

END SUB

SUB roomeight
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
catx = 15
caty = 10
oldcaty = caty
oldcatx = catx

FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map8(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map8(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map8(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    IF map8(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map8(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map8(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    IF map8(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
    IF map8(x, y) = 9 THEN
      IF quote = 3 THEN
        PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      ELSE
        PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      END IF
    END IF

  NEXT x
NEXT y







DO
key$ = INKEY$


IF LCASE$(key$) = "p" THEN cheat = 10
IF LCASE$(key$) = "i" THEN cheatq = 10
IF LCASE$(key$) = "k" THEN cheatw = 10
IF LCASE$(key$) = "m" THEN cheate = 10
IF LCASE$(key$) = "i" THEN cheatr = 10
IF LCASE$(key$) = "n" THEN cheatt = 10

IF cheat = 10 AND cheatq = 10 AND cheatw = 10 AND cheate = 10 AND cheatr = 10 AND cheatt = 10 THEN
  nextroom = 4'roomfour
  '
END IF

IF key$ = "a" THEN
  nextroom = 4'roomfour
  '
END IF


IF key$ = "b" THEN
  nextroom = 5'roomfive
    '
END IF

IF key$ = "c" THEN
  nextroom = 6'roomsix
    '
END IF

IF key$ = "d" THEN
  nextroom = 7'roomseven
  '
END IF


IF key$ = CHR$(0) + CHR$(75) AND map8(parrotx - 1, parroty) <> 1 AND map8(parrotx - 1, parroty) <> 8 AND map8(parrotx - 1, parroty) <> 9 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map8(parrotx + 1, parroty) <> 1 AND map8(parrotx + 1, parroty) <> 8 AND map8(parrotx + 1, parroty) <> 9 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map8(parrotx, parroty - 1) <> 1 AND map8(parrotx, parroty - 1) <> 8 AND map8(parrotx, parroty - 1) <> 9 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map8(parrotx, parroty + 1) <> 1 AND map8(parrotx, parroty + 1) <> 8 AND map8(parrotx, parroty + 1) <> 9 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

  IF catx >= parrotx AND caty >= parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      caty = caty - 1
      SLEEP 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx - 1
    END IF
  END IF

  IF catx < parrotx AND caty > parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty - 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx + 1
    END IF
  END IF

  IF catx <= parrotx AND caty <= parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty + 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx + 1
    END IF
  END IF

  IF catx > parrotx AND caty < parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty + 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx - 1
    END IF
  END IF


IF oldparrotx <> parrotx OR oldparroty <> parroty OR oldcatx <> catx OR oldcaty <> caty THEN
  oldparrotx = parrotx
  oldparroty = parroty
  oldcaty = caty
  oldcatx = catx



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map8(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map8(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map8(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map8(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map8(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map8(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      IF map8(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
      IF map8(x, y) = 9 THEN
        IF quote > 3 THEN
          map1(1, 7) = 2
        ELSE
          PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
        END IF
      END IF
    NEXT x
  NEXT y

  PUT (catx * 15 - 15, caty * 13 - 13), catsh, AND
  PUT (catx * 15 - 15, caty * 13 - 13), cat, OR
  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parrotx = 15 AND parroty = 1 THEN
  parroty = 14
  nextroom = 1'roomone
  EXIT SUB
END IF

IF parrotx = 5 AND parroty = 14 THEN
  parroty = 2
  nextroom = 9 'roomnine
  EXIT SUB
END IF


IF caty = parroty AND catx = parrotx THEN
  FOR i = 1 TO 80
    LINE (0, 0)-(320, 240), 0, BF
  NEXT
  parroty = 6
  parrotx = 2
  nextroom = 998'verystart
  EXIT SUB
END IF


LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

LOOP UNTIL key$ = CHR$(27)



END
END SUB

SUB roomeleven
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR

FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map11(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map11(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map11(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    IF map11(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
    IF map11(x, y) = 12 THEN
      PUT (x * 15 - 15, y * 13 - 13), glovesh, AND
      PUT (x * 15 - 15, y * 13 - 13), glove, OR
    END IF
    IF map11(x, y) = 9 THEN
      IF quote = 3 THEN
        PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      ELSE
        PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      END IF
    END IF

  NEXT x
NEXT y





DO
key$ = INKEY$


IF key$ = CHR$(0) + CHR$(75) AND map11(parrotx - 1, parroty) <> 1 AND map11(parrotx - 1, parroty) <> 8 AND map11(parrotx - 1, parroty) <> 9 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map11(parrotx + 1, parroty) <> 1 AND map11(parrotx + 1, parroty) <> 8 AND map11(parrotx + 1, parroty) <> 9 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map11(parrotx, parroty - 1) <> 1 AND map11(parrotx, parroty - 1) <> 8 AND map11(parrotx, parroty - 1) <> 9 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map11(parrotx, parroty + 1) <> 1 AND map11(parrotx, parroty + 1) <> 8 AND map11(parrotx, parroty + 1) <> 9 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF


 
IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map11(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map11(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map11(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map11(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map11(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map11(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      IF map11(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
      IF map11(x, y) = 9 THEN
        IF quote > 3 THEN
          map1(1, 7) = 2
        ELSE
          PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
        END IF
      END IF
    NEXT x
  NEXT y

  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parrotx = 1 AND parroty = 9 THEN
  parrotx = 19
  nextroom = 10'roomeight
  EXIT SUB
END IF


LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

LOOP UNTIL key$ = CHR$(27)



END

END SUB

SUB roomfive
hi = 13
bye = 9
byeadj = 1

PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR

FOR y = 1 TO 15
 FOR x = 1 TO 21
  IF map5(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
  IF map5(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
  IF quote < 5 THEN
    IF map5(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
  ELSE
    IF map5(x, y) = 3 THEN map5(x, y) = 12
  END IF
  IF map5(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
  IF map5(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
  IF map5(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
  IF map5(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
 NEXT x
NEXT y



tim = 95

DO
WAIT &H3DA, 8

key$ = INKEY$

IF key$ = CHR$(0) + CHR$(75) AND map5(parrotx - 1, parroty) <> 1 AND map5(parrotx - 1, parroty) <> 8 AND map5(parrotx - 1, parroty) <> 12 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map5(parrotx + 1, parroty) <> 1 AND map5(parrotx + 1, parroty) <> 8 AND map5(parrotx + 1, parroty) <> 12 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map5(parrotx, parroty - 1) <> 1 AND map5(parrotx, parroty - 1) <> 8 AND map5(parrotx, parroty - 1) <> 12 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map5(parrotx, parroty + 1) <> 1 AND map5(parrotx, parroty + 1) <> 8 AND map5(parrotx, parroty + 1) <> 12 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

IF map5(parrotx, parroty) = 3 THEN
  FOR i = 1 TO 80
   LINE (0, 0)-(320, 240), 0, BF
  NEXT
  parroty = 6
  parrotx = 2
  nextroom = 998'verystart
  EXIT SUB
END IF

tim = tim + byeadj






IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map5(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map5(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
        IF quote < 5 THEN
          IF map5(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
        ELSE
          IF map5(x, y) = 3 THEN map5(x, y) = 12
        END IF
      IF map5(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
      IF map5(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map5(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map5(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      IF kid = 1 THEN
        IF map5(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      ELSE
        IF map5(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
        IF quote = 1 THEN quote = 2
      END IF
    NEXT x
  NEXT y

  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parroty = 7 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 1
  EXIT SUB
END IF

LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15


IF parroty = 2 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 4 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 6 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 8 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 13 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 3 THEN
  parroty = 2
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 6 THEN
  parroty = 2
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 9 THEN
  parroty = 7
  parrotx = 19
  LINE (0, 0)-(300, 200), 0, BF
  FOR i = 1 TO 1500
    LINE (INT(RND * 300), INT(RND * 200))-(INT(RND * 300), INT(RND * 200)), INT(RND * 100)
    LOCATE 13, 18
    PRINT "WARP"
    puppet = 0
  NEXT i
  LINE (0, 0)-(320, 240), 0, BF
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 11 THEN
  parroty = 2
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 13 THEN
  parroty = 2
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 15 THEN
  parroty = 2
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 18 THEN
  parroty = 2
  nextroom = 6'roomsix
  EXIT SUB
END IF

LOOP WHILE key$ <> CHR$(27)

END
END SUB

SUB roomfour


hi = 13
bye = 9
byeadj = 1

PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR


FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map4(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map4(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF quote < 5 THEN
      IF map4(x, y) = 3 THEN
        PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      END IF
    ELSE
      IF map4(x, y) = 3 THEN map4(x, y) = 12
    END IF
    IF map4(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
    IF map4(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map4(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map4(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
  NEXT x
NEXT y



tim = 95

DO
WAIT &H3DA, 8

key$ = INKEY$

IF key$ = CHR$(0) + CHR$(75) AND map4(parrotx - 1, parroty) <> 1 AND map4(parrotx - 1, parroty) <> 8 AND map4(parrotx - 1, parroty) <> 12 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map4(parrotx + 1, parroty) <> 1 AND map4(parrotx + 1, parroty) <> 8 AND map4(parrotx + 1, parroty) <> 12 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map4(parrotx, parroty - 1) <> 1 AND map4(parrotx, parroty - 1) <> 8 AND map4(parrotx, parroty - 1) <> 12 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map4(parrotx, parroty + 1) <> 1 AND map4(parrotx, parroty + 1) <> 8 AND map4(parrotx, parroty + 1) <> 12 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

IF map4(parrotx, parroty) = 3 THEN
  FOR i = 1 TO 80
    LINE (0, 0)-(320, 240), 0, BF
  NEXT i
  parroty = 6
  parrotx = 2
  nextroom = 998'verystart
  EXIT SUB
END IF


tim = tim + byeadj

IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
     IF map4(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
     IF map4(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
       IF quote < 5 THEN
         IF map4(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
       ELSE
         IF map4(x, y) = 3 THEN map4(x, y) = 12
       END IF
       IF map4(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
     IF map4(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
     IF map4(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
     IF map4(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
     IF kid = 1 THEN
       IF map4(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
     ELSE
       IF map4(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
       IF quote = 1 THEN quote = 2
     END IF
    NEXT x
  NEXT y

  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF


  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parroty = 7 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 1'roomone
  EXIT SUB
END IF

LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15


IF parroty = 2 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 4 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 6 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 8 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 13 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 4 THEN
  parroty = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 7 THEN
  parroty = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 9 THEN
  parroty = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 12 THEN
  parroty = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 15 THEN
  parroty = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 14 AND parrotx = 17 THEN
  parroty = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

LOOP WHILE key$ <> CHR$(27)

END
END SUB

SUB roomnine


PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
catx = 15
caty = 10
oldcaty = caty
oldcatx = catx


FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map9(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map9(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map9(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    IF map9(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map9(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map9(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    IF map9(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
    IF map9(x, y) = 9 THEN
      IF quote = 3 THEN
        PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      ELSE
        PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      END IF
    END IF

  NEXT x
NEXT y







DO
key$ = INKEY$


IF key$ = CHR$(0) + CHR$(75) AND map9(parrotx - 1, parroty) <> 1 AND map9(parrotx - 1, parroty) <> 8 AND map9(parrotx - 1, parroty) <> 9 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map9(parrotx + 1, parroty) <> 1 AND map9(parrotx + 1, parroty) <> 8 AND map9(parrotx + 1, parroty) <> 9 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map9(parrotx, parroty - 1) <> 1 AND map9(parrotx, parroty - 1) <> 8 AND map9(parrotx, parroty - 1) <> 9 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map9(parrotx, parroty + 1) <> 1 AND map9(parrotx, parroty + 1) <> 8 AND map9(parrotx, parroty + 1) <> 9 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

  IF catx >= parrotx AND caty >= parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      caty = caty - 1
      SLEEP 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx - 1
    END IF
  END IF

  IF catx < parrotx AND caty > parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty - 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx + 1
    END IF
  END IF

  IF catx <= parrotx AND caty <= parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty + 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx + 1
    END IF
  END IF

  IF catx > parrotx AND caty < parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty + 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx - 1
    END IF
  END IF


IF oldparrotx <> parrotx OR oldparroty <> parroty OR oldcatx <> catx OR oldcaty <> caty THEN
  oldparrotx = parrotx
  oldparroty = parroty
  oldcaty = caty
  oldcatx = catx



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map9(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map9(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map9(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map9(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map9(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map9(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      IF map9(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
      IF map9(x, y) = 9 THEN
        IF quote > 3 THEN
          map1(1, 7) = 2
        ELSE
          PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
        END IF
      END IF
    NEXT x
  NEXT y

  PUT (catx * 15 - 15, caty * 13 - 13), catsh, AND
  PUT (catx * 15 - 15, caty * 13 - 13), cat, OR
  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parrotx = 5 AND parroty = 1 THEN
  parroty = 13
  nextroom = 8'roomeight
  EXIT SUB
END IF

IF parrotx = 14 AND parroty = 14 THEN
  parroty = 2
  nextroom = 10'roomten
  EXIT SUB
END IF


IF caty = parroty AND catx = parrotx THEN
  FOR i = 1 TO 80
    LINE (0, 0)-(320, 240), 0, BF
  NEXT
  parroty = 6
  parrotx = 2
  nextroom = 998'verystart
  EXIT SUB
END IF


LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

LOOP UNTIL key$ = CHR$(27)



END
END SUB

SUB roomone
'start room



PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR



FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map1(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map1(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map1(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    IF map1(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map1(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map1(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    IF map1(x, y) = 13 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
    IF map1(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), firebottomrightcorner, PSET
    IF map1(x, y) = 15 THEN PUT (x * 15 - 15, y * 13 - 13), firetoprightcorner, PSET
    IF map1(x, y) = 14 THEN PUT (x * 15 - 15, y * 13 - 13), firetopleftcorner, PSET
    IF map1(x, y) = 16 THEN PUT (x * 15 - 15, y * 13 - 13), firebottomleftcorner, PSET
  NEXT x
NEXT y







DO

key$ = INKEY$


IF LCASE$(key$) = "p" THEN cheat = 10
IF LCASE$(key$) = "i" THEN cheatq = 10
IF LCASE$(key$) = "k" THEN cheatw = 10
IF LCASE$(key$) = "m" THEN cheate = 10
IF LCASE$(key$) = "i" THEN cheatr = 10
IF LCASE$(key$) = "n" THEN cheatt = 10
IF LCASE$(key$) = "j" THEN quote = 6
IF cheat = 10 AND cheatq = 10 AND cheatw = 10 AND cheate = 10 AND cheatr = 10 AND cheatt = 10 THEN
  nextroom = 4 'roomfour
  EXIT SUB
END IF

IF key$ = "a" THEN
  nextroom = 4 'roomfour
  EXIT SUB
END IF


IF key$ = "b" THEN
  nextroom = 5 'roomfive
  EXIT SUB
END IF

IF key$ = "c" THEN
  nextroom = 6 'roomsix
  EXIT SUB
END IF

IF key$ = "d" THEN
  nextroom = 7 'roomseven
  EXIT SUB
END IF


IF key$ = CHR$(0) + CHR$(75) AND map1(parrotx - 1, parroty) <> 1 AND map1(parrotx - 1, parroty) <> 8 AND map1(parrotx - 1, parroty) <> 9 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map1(parrotx + 1, parroty) <> 1 AND map1(parrotx + 1, parroty) <> 8 AND map1(parrotx + 1, parroty) <> 9 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map1(parrotx, parroty - 1) <> 1 AND map1(parrotx, parroty - 1) <> 8 AND map1(parrotx, parroty - 1) <> 9 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map1(parrotx, parroty + 1) <> 1 AND map1(parrotx, parroty + 1) <> 8 AND map1(parrotx, parroty + 1) <> 9 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

IF map1(parrotx, parroty) = 3 OR map1(parrotx, parroty) = 13 OR map1(parrotx, parroty) = 15 OR map1(parrotx, parroty) = 14 OR map1(parrotx, parroty) = 16 THEN
  FOR i = 1 TO 80
    LINE (0, 0)-(320, 240), 0, BF
  NEXT
  parroty = 6
  parrotx = 2

  nextroom = 998'verystart
  EXIT SUB
END IF


IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map1(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map1(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map1(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map1(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map1(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map1(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      IF map1(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      IF map1(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
      IF map1(x, y) = 13 THEN PUT (x * 15 - 15, y * 13 - 13), firebottomrightcorner, PSET
      IF map1(x, y) = 15 THEN PUT (x * 15 - 15, y * 13 - 13), firetoprightcorner, PSET
      IF map1(x, y) = 14 THEN PUT (x * 15 - 15, y * 13 - 13), firetopleftcorner, PSET
      IF map1(x, y) = 16 THEN PUT (x * 15 - 15, y * 13 - 13), firebottomleftcorner, PSET
    NEXT x
  NEXT y

  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF





IF parrotx = 20 AND parroty = 6 THEN
  nextroom = 3'roomthree
  EXIT SUB
  '
END IF

IF parrotx = 1 AND parroty = 7 THEN
  parrotx = 19
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parrotx = 15 AND parroty = 14 THEN
  parroty = 2
  parrotx = 15
  nextroom = 8'roomeight
  EXIT SUB
END IF


IF parrotx = 17 AND parroty = 1 THEN
  nextroom = 2 'roomtwo
  EXIT SUB
END IF

LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

LOOP UNTIL key$ = CHR$(27)
END
END SUB

SUB roomseven
hi = 13
bye = 9
byeadj = 1

PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR


FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map7(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map7(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF quote < 5 THEN
      IF map7(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    ELSE
      IF map7(x, y) = 3 THEN map7(x, y) = 12
    END IF
    IF map7(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map7(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map7(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
    IF map7(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    IF map7(x, y) = 9 THEN
      PUT (x * 15 - 15, y * 13 - 13), starsh, AND
      PUT (x * 15 - 15, y * 13 - 13), star, OR
    END IF
  NEXT x
NEXT y



tim = 95

DO

key$ = INKEY$

IF key$ = CHR$(0) + CHR$(75) AND map7(parrotx - 1, parroty) <> 1 AND map7(parrotx - 1, parroty) <> 8 AND map7(parrotx - 1, parroty) <> 12 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map7(parrotx + 1, parroty) <> 1 AND map7(parrotx + 1, parroty) <> 8 AND map7(parrotx + 1, parroty) <> 12 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map7(parrotx, parroty - 1) <> 1 AND map7(parrotx, parroty - 1) <> 8 AND map7(parrotx, parroty - 1) <> 12 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map7(parrotx, parroty + 1) <> 1 AND map7(parrotx, parroty + 1) <> 8 AND map7(parrotx, parroty + 1) <> 12 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF


IF parrotx = 19 AND parroty = 13 AND quote = 4 THEN
  map7(19, 13) = 2
  quote = 5
  PLAY "e32 d32"
END IF

IF map7(parrotx, parroty) = 3 THEN
  FOR i = 1 TO 80
   LINE (0, 0)-(320, 240), 0, BF
  NEXT i
  parroty = 6
  parrotx = 2

  nextroom = 998'verystart
  EXIT SUB
END IF

tim = tim + byeadj


IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map7(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map7(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF quote < 5 THEN
        IF map7(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      ELSE
        IF map7(x, y) = 3 THEN map7(x, y) = 12
      END IF
      IF map7(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map7(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
      IF map7(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map7(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      IF map7(x, y) = 9 THEN
        PUT (x * 15 - 15, y * 13 - 13), starsh, AND
        PUT (x * 15 - 15, y * 13 - 13), star, OR
      END IF
    NEXT x
  NEXT y


  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parroty = 7 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 1
  EXIT SUB
END IF

LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

IF parroty = 2 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 4 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 6 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 9 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 11 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 13 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 6'roomsix
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 4 THEN
  parroty = 13
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 7 THEN
  parroty = 13
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 9 THEN
  parroty = 13
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 12 THEN
  parroty = 13
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 15 THEN
  parroty = 13
  nextroom = 4'roomfour
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 17 THEN
  parroty = 13
  nextroom = 4'roomfour
  EXIT SUB
END IF


LOOP WHILE key$ <> CHR$(27)

END
END SUB

SUB roomsix
hi = 13
bye = 9
byeadj = 1



FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map6(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map6(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF quote < 5 THEN
        IF map6(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      ELSE
        IF map6(x, y) = 3 THEN map6(x, y) = 12
      END IF
    IF map6(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
    IF map6(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map6(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map6(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
  NEXT x
NEXT y


PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR


tim = 95

DO
WAIT &H3DA, 8

key$ = INKEY$

IF key$ = CHR$(0) + CHR$(75) AND map6(parrotx - 1, parroty) <> 1 AND map6(parrotx - 1, parroty) <> 8 AND map6(parrotx - 1, parroty) <> 12 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map6(parrotx + 1, parroty) <> 1 AND map6(parrotx + 1, parroty) <> 8 AND map6(parrotx + 1, parroty) <> 12 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF


IF key$ = CHR$(0) + CHR$(72) AND map6(parrotx, parroty - 1) <> 1 AND map6(parrotx, parroty - 1) <> 8 AND map6(parrotx, parroty - 1) <> 12 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF


IF key$ = CHR$(0) + CHR$(80) AND map6(parrotx, parroty + 1) <> 1 AND map6(parrotx, parroty + 1) <> 8 AND map6(parrotx, parroty + 1) <> 12 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

IF map6(parrotx, parroty) = 3 THEN
  FOR i = 1 TO 80
    LINE (0, 0)-(320, 240), 0, BF
  NEXT
  parroty = 6
  parrotx = 2
  nextroom = 998'verystart
  EXIT SUB
END IF

tim = tim + byeadj






IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map6(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map6(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF quote < 5 THEN
        IF map6(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      ELSE
        IF map6(x, y) = 3 THEN map6(x, y) = 12
      END IF
      IF map6(x, y) = 12 THEN PUT (x * 15 - 15, y * 13 - 13), hardfire, PSET
      IF map6(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map6(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map6(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      IF kid = 1 THEN
        IF map6(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      ELSE
        IF map6(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
        IF quote = 1 THEN quote = 2
      END IF
    NEXT x
  NEXT y

  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF


  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF



END IF


IF parroty = 7 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 1
  EXIT SUB
END IF

LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

IF parroty = 2 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 4 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 6 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 9 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 11 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 13 AND parrotx = 20 THEN
  parrotx = 2
  nextroom = 7'roomseven
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 3 THEN
  parroty = 13
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 6 THEN
  parroty = 13
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 11 THEN
  parroty = 13
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 13 THEN
  parroty = 13
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 15 THEN
  parroty = 13
  nextroom = 5'roomfive
  EXIT SUB
END IF

IF parroty = 1 AND parrotx = 18 THEN
  parroty = 13
  nextroom = 5'roomfive
  EXIT SUB
END IF

LOOP WHILE key$ <> CHR$(27)

END
END SUB

SUB roomten
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
catx = 15
caty = 10
oldcaty = caty
oldcatx = catx
FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map10(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map10(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map10(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    IF map10(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map10(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map10(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    IF map10(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
    IF map10(x, y) = 9 THEN
      IF quote = 3 THEN
        PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      ELSE
        PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      END IF
    END IF

  NEXT x
NEXT y







DO
key$ = INKEY$


IF key$ = CHR$(0) + CHR$(75) AND map10(parrotx - 1, parroty) <> 1 AND map10(parrotx - 1, parroty) <> 8 AND map10(parrotx - 1, parroty) <> 9 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map10(parrotx + 1, parroty) <> 1 AND map10(parrotx + 1, parroty) <> 8 AND map10(parrotx + 1, parroty) <> 9 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map10(parrotx, parroty - 1) <> 1 AND map10(parrotx, parroty - 1) <> 8 AND map10(parrotx, parroty - 1) <> 9 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map10(parrotx, parroty + 1) <> 1 AND map10(parrotx, parroty + 1) <> 8 AND map10(parrotx, parroty + 1) <> 9 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF

  IF catx >= parrotx AND caty >= parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      caty = caty - 1
      SLEEP 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx - 1
    END IF
  END IF

  IF catx < parrotx AND caty > parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty - 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx + 1
    END IF
  END IF

  IF catx <= parrotx AND caty <= parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty + 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx + 1
    END IF
  END IF

  IF catx > parrotx AND caty < parroty THEN
    uporleft = INT(RND * 3)
    IF uporleft = 0 THEN
      SLEEP 1
      caty = caty + 1
    END IF
    IF uporleft = 1 THEN
      SLEEP 1
    END IF
    IF uporleft = 2 THEN
      SLEEP 1
      catx = catx - 1
    END IF
  END IF


IF oldparrotx <> parrotx OR oldparroty <> parroty OR oldcatx <> catx OR oldcaty <> caty THEN
  oldparrotx = parrotx
  oldparroty = parroty
  oldcaty = caty
  oldcatx = catx



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map10(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map10(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map10(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map10(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map10(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map10(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      IF map10(x, y) = 20 THEN PUT (x * 15 - 15, y * 13 - 13), brick, PSET
      IF map10(x, y) = 9 THEN
        IF quote > 3 THEN
          map1(1, 7) = 2
        ELSE
          PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
        END IF
      END IF
    NEXT x
  NEXT y

  PUT (catx * 15 - 15, caty * 13 - 13), catsh, AND
  PUT (catx * 15 - 15, caty * 13 - 13), cat, OR
  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parrotx = 14 AND parroty = 1 THEN
  parroty = 13
  nextroom = 9'roomeight
  EXIT SUB
END IF

IF parrotx = 20 AND parroty = 9 THEN
  parrotx = 2
  nextroom = 11'roomeleven
  EXIT SUB
END IF


IF caty = parroty AND catx = parrotx THEN
  FOR i = 1 TO 80
    LINE (0, 0)-(320, 240), 0, BF
  NEXT
  parroty = 6
  parrotx = 2
  nextroom = 998'verystart
  EXIT SUB
END IF


LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

LOOP UNTIL key$ = CHR$(27)



END

END SUB

SUB roomthree

'gem room
'gem room








bally = 8
hi = 13
bye = 9
byeadj = 1
ballx = 12
parrotx = 2
parroty = 6


FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map1(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map1(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map1(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    IF map1(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map1(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map1(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
  NEXT x
NEXT y



tim = 95

DO



WAIT &H3DA, 8


PUT (ballx + 168, bally + tim), ballsh, AND
PUT (ballx + 168, bally + tim), ball, OR

key$ = INKEY$

IF key$ = CHR$(0) + CHR$(75) AND map2(parrotx - 1, parroty) <> 1 AND map2(parrotx - 1, parroty) <> 8 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map2(parrotx + 1, parroty) <> 1 AND map2(parrotx + 1, parroty) <> 8 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map2(parrotx, parroty - 1) <> 1 AND map2(parrotx, parroty - 1) <> 8 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map2(parrotx, parroty + 1) <> 1 AND map2(parrotx, parroty + 1) <> 8 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF



tim = tim + byeadj









IF tim = 13 * 13 - 21 THEN byeadj = -1
IF tim = 9 * 13 - 21 THEN byeadj = 1




IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map2(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map2(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map2(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map2(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map2(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map2(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
      IF kid = 1 THEN
        IF map2(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      ELSE
         IF map2(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
        IF quote = 1 THEN quote = 2
      END IF
    NEXT x
  NEXT y

  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF


  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF
END IF

IF parrotx * 15 - 15 = ballx + 168 AND parroty * 13 - 13 = bally + tim THEN
  nextroom = 998'verystart
END IF

IF parroty = 6 AND parrotx = 1 THEN
  parrotx = 19
  nextroom = 1'roomone
  EXIT SUB
END IF

IF parroty = 5 AND parrotx = 17 AND pikmin = 12 THEN
  IF kid <> 11 THEN
    LOCATE 23, 34
    COLOR 40
    PRINT CHR$(3); ""; health
    PLAY "c32 d32"
  END IF
  kid = 11
END IF

LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

IF map2(parrotx, parroty) = 3 THEN
  FOR i = 1 TO 80
   LINE (0, 0)-(320, 240), 0, BF
  NEXT i
  nextroom = 998'verystart
  EXIT SUB
END IF

LOOP WHILE key$ <> CHR$(27)

END

END SUB

SUB roomtwo
a$ = "     Please find my mushroom, Ollie.          I'll give you lots of nuts.                                             "
b$ = "        Keep looking Ollie, and                   I'll give you nuts.                                                 "
c$ = "     Thanks for finding my mushroom,           Ollie. Here are your nuts.                                             "
d$ = "     I have another mission for you             Ollie. Could you find my                 star? If you do I will                    give you a reward.                                                  "
e$ = "          Keep looking Ollie.                 I'm sure you'll find my star                                            "
f$ = "           Thank you Ollie.                   I opened another door for you,            could you find my glove?      "
g$ = "          Please find my glove                  I'll thank you if you do                                              "
parrotx = 17
parroty = 13


FOR y = 1 TO 15
  FOR x = 1 TO 21
    IF map3(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
    IF map3(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
    IF map3(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
    IF map3(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
    IF map3(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
    IF map3(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
  NEXT x
NEXT y


PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR

DO

IF health > 100 THEN health = 100

key$ = INKEY$

IF key$ = CHR$(0) + CHR$(75) AND map3(parrotx - 1, parroty) <> 3 AND map3(parrotx - 1, parroty) <> 1 AND map3(parrotx - 1, parroty) <> 8 AND map3(parrotx - 1, parroty) <> 7 THEN
  IF parrotx > 1 THEN parrotx = parrotx - 1
  puppet = 1
END IF

IF key$ = CHR$(0) + CHR$(77) AND map3(parrotx + 1, parroty) <> 3 AND map3(parrotx + 1, parroty) <> 1 AND map3(parrotx + 1, parroty) <> 8 AND map3(parrotx + 1, parroty) <> 7 THEN
  IF parrotx < 20 THEN parrotx = parrotx + 1
  puppet = 0
END IF

IF key$ = CHR$(0) + CHR$(72) AND map3(parrotx, parroty - 1) <> 3 AND map3(parrotx, parroty - 1) <> 1 AND map3(parrotx, parroty - 1) <> 8 AND map3(parrotx, parroty - 1) <> 7 THEN
  IF parroty > 1 THEN parroty = parroty - 1
  puppet = 2
END IF

IF key$ = CHR$(0) + CHR$(80) AND map3(parrotx, parroty + 1) <> 3 AND map3(parrotx, parroty + 1) <> 1 AND map3(parrotx, parroty + 1) <> 8 AND map3(parrotx, parroty + 1) <> 7 THEN
  IF parroty < 14 THEN parroty = parroty + 1
  puppet = 3
END IF





IF oldparrotx <> parrotx OR oldparroty <> parroty THEN
  oldparrotx = parrotx
  oldparroty = parroty



  FOR y = 1 TO 15
    FOR x = 1 TO 21
      IF map3(x, y) = 1 THEN PUT (x * 15 - 15, y * 13 - 13), block, PSET
      IF map3(x, y) = 2 THEN PUT (x * 15 - 15, y * 13 - 13), grass, PSET
      IF map3(x, y) = 3 THEN PUT (x * 15 - 15, y * 13 - 13), fire, PSET
      IF map3(x, y) = 4 THEN PUT (x * 15 - 15, y * 13 - 13), soot, PSET
      IF map3(x, y) = 5 THEN PUT (x * 15 - 15, y * 13 - 13), bridge, PSET
      IF map3(x, y) = 6 THEN PUT (x * 15 - 15, y * 13 - 13), gem, PSET
      IF map3(x, y) = 7 THEN
        IF parrotx <= 14 THEN
          PUT (x * 15 - 15, y * 13 - 13), manbacksh, AND
          PUT (x * 15 - 15, y * 13 - 13), manback, OR
        END IF
        IF parrotx = 15 AND parroty >= 4 THEN
          PUT (x * 15 - 15, y * 13 - 13), manfront, PSET
        END IF
        IF parrotx = 15 AND parroty <= 4 THEN
          PUT (x * 15 - 15, y * 13 - 13), manhead, PSET
        END IF
        IF parrotx >= 16 THEN
          PUT (x * 15 - 15, y * 13 - 13), man, PSET
        END IF
      END IF
      IF map3(x, y) = 8 THEN PUT (x * 15 - 15, y * 13 - 13), blockchip, PSET
    NEXT x
  NEXT y



  IF puppet = 0 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrot, OR
  END IF

  IF puppet = 1 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotsidesh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotside, OR
  END IF

  IF puppet = 2 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotbacksh, AND
     PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotback, OR
  END IF

  IF puppet = 3 THEN
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfrontsh, AND
    PUT (parrotx * 15 - 15, parroty * 13 - 13), parrotfront, OR
  END IF

END IF


IF parrotx = 17 AND parroty = 14 THEN
  parroty = 2
  parrotx = 17
  nextroom = 1'roomone
  EXIT SUB'
END IF

IF parrotx = 15 AND parroty = 4 THEN
    IF quote = 0 THEN
      LOCATE 1, 1
      PRINT a$
        SLEEP 2
      quote = 1
   END IF

   IF quote = 1 THEN
     LOCATE 1, 1
     pikmin = 12
     PRINT b$
   END IF

   IF quote = 2 THEN health = health + 40

   IF quote = 2 THEN
     LOCATE 1, 1
     PRINT c$
     SLEEP 5
     quote = 3
   END IF

   IF quote = 3 THEN
     LOCATE 1, 1
     PRINT d$
     SLEEP 5
     map1(1, 7) = 2
     quote = 4
   END IF

  IF quote = 3 THEN health = health + 40

  IF quote = 4 THEN
    LOCATE 1, 1
    PRINT e$
  END IF

  IF quote = 5 THEN
    IF health <= 60 THEN
      health = health + 40
    END IF
    IF health = 80 THEN
      health = health + 20
    END IF
    IF health = 100 THEN
      health = health
    END IF
    LOCATE 1, 1
    PRINT f$
    SLEEP 5
    quote = 6
  END IF
  IF quote = 6 THEN
    LOCATE 1, 1
    PRINT g$
    map1(15, 14) = 2
  END IF


END IF




IF parrotx = 15 AND parroty = 6 THEN

  IF quote = 0 THEN
    LOCATE 1, 1
    PRINT a$
    SLEEP 3
    quote = 1
  END IF

  IF quote = 1 THEN
    LOCATE 1, 1
    PRINT b$
    pikmin = 12
  END IF

  IF quote = 2 THEN health = health + 40

  IF quote = 2 THEN
    LOCATE 1, 1
    PRINT c$
    SLEEP 5
    quote = 3
  END IF

  IF quote = 3 THEN
    LOCATE 1, 1
    PRINT d$
    SLEEP 5
    map1(1, 7) = 2
    quote = 4
  END IF

  IF quote = 4 THEN
    LOCATE 1, 1
    PRINT e$
  END IF

  IF quote = 5 THEN

    IF health <= 60 THEN
      health = health + 40
    END IF

    IF health = 80 THEN
      health = health + 20
    END IF

    IF health = 100 THEN
      health = health
    END IF

    LOCATE 1, 1
    PRINT f$
    SLEEP 5
    quote = 6
  END IF

  IF quote = 6 THEN
    LOCATE 1, 1
    PRINT g$
    map1(15, 14) = 2
  END IF


END IF




IF parrotx = 14 AND parroty = 5 THEN

  IF quote = 0 THEN
    LOCATE 1, 1
    PRINT a$
    SLEEP 3
    quote = 1
  END IF

  IF quote = 1 THEN
    LOCATE 1, 1
    PRINT b$
    pikmin = 12
  END IF

  IF quote = 2 THEN health = health + 40

  IF quote = 2 THEN
    LOCATE 1, 1
    PRINT c$
    SLEEP 5
    quote = 3
  END IF

  IF quote = 3 THEN
    LOCATE 1, 1
    PRINT d$
    SLEEP 5
    map1(1, 7) = 2
    quote = 4
  END IF

  IF quote = 4 THEN
    LOCATE 1, 1
    PRINT e$
  END IF

  IF quote = 5 THEN
    IF health <= 60 THEN
      health = health + 40
    END IF
    IF health = 80 THEN
      health = health + 20
    END IF
    IF health = 100 THEN
      health = health
   END IF

    LOCATE 1, 1
    PRINT f$
    SLEEP 5
    quote = 6
  END IF

  IF quote = 6 THEN
    LOCATE 1, 1
    PRINT g$
    map1(15, 14) = 2
  END IF

END IF



IF oldparrotx = 16 AND parroty = 5 THEN

  IF quote = 0 THEN
    LOCATE 1, 1
    PRINT a$
    SLEEP 5
    quote = 1
  END IF

  IF quote = 1 THEN
    pikmin = 12
    LOCATE 1, 1
    PRINT b$
  END IF

  IF quote = 2 THEN health = health + 40

  IF quote = 2 THEN
    LOCATE 1, 1
    PRINT c$
    SLEEP 5
    quote = 3
  END IF

  IF quote = 3 THEN
    LOCATE 1, 1
    PRINT d$
    SLEEP 5
    map1(1, 7) = 2
    quote = 4
  END IF

  IF quote = 4 THEN
    LOCATE 1, 1
    PRINT e$
  END IF


  IF quote = 5 THEN
    IF health <= 60 THEN
      health = health + 40
    END IF
    IF health = 80 THEN
      health = health + 20
    END IF
    IF health = 100 THEN
      health = health
    END IF
    LOCATE 1, 1
    PRINT f$
    SLEEP 5
    quote = 6
  END IF

  IF quote = 6 THEN
    LOCATE 1, 1
    PRINT g$
    map1(15, 14) = 2
  END IF

END IF


LOCATE 23, 34
COLOR 40
PRINT CHR$(3); ""; health
COLOR 15

LOOP WHILE key$ <> CHR$(27)

END
END SUB

SUB sleeep (seconds AS SINGLE)
  delay! = TIMER + seconds

  IF delay! >= 86400 THEN
   delay! = delay! - 86400
   DO
   LOOP UNTIL TIMER < 100
  END IF

  DO
  LOOP UNTIL TIMER >= delay!
END SUB

SUB verystart
puppet = 0
health = health - 20

IF health <= 0 THEN
  health = 0
  nextroom = 999'fin
  EXIT SUB
END IF
PLAY "f16"
cheat = 0
cheatq = 0
cheatw = 0
cheate = 0
cheatr = 0
cheatt = 0


parrotx = 2
parroty = 6

nextroom = 1'roomone
'
END SUB

